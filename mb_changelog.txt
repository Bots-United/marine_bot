Marine Bot 0.94b change log

ADDED sd_durandal_r47_dusk waypoints
ADDED sd_durandal_r47_night waypoints
CHANGED inability to medevac is no longer logged into mb_error-log file
FIXED mgunner bot ignoring wait time on waypoint if the path was sniper + mgunner path
ADDED client command 'wpt compass <arg>' (it will display rapidly blinking beam that'll lead you to the waypoint given through the argument, 'off' will stop it, also if you pass invalid or no argument this feature will automatically turn off)
ADDED client command 'pathwpt compass <arg>' (works the same way as 'wpt compass' so it'll lead you to the waypoint where given path begins i.e. its first waypoint, 'off' or invalid argument or no argument at all will turn this feature off)
UPDATED client command 'pathwpt checkproblems' has a check for solitary waypoints (any waypoint that isn't part of a path with exception of 'aim' and 'cross' waypoints is reported)
UPDATED client command 'pathwpt checkproblems' has a check for the same waypoint added to path more than once (that's a bug that would create a loop error, the new safety system in path creation routines won't allow it, but waypoints created prior MB 0.94b can have such bug, therefore there was this check added, you can fix it easily by using 'pathwpt continue' on such path followed by 'pathwpt stop' which runs the self-fixing routine or you can use the 'wpt repair masterrepair' that does fix this bug as well)
UPDATED client command 'pathwpt info' works now in cooperation with path highlighting feature (it printed info about the first found path, now it does check if the path matches highlighing mask, if it doesn't match then it looks for next path)
UPDATED 'pathwpt highlight' command has two new options 'sniper' and 'mgunner'
Bot can now fast switch to sidearm or smg (if he has one) instead of reloading main weapon in battle
FIXED bot spawning "phantom" grenade in any class with m82 weapon which he then tried to use in game (if there was real grenade in the class then all was okay)
FIXED weapon reload bug (when the bot decided to go prone or resume from prone while trying to reload his weapon)
FIXED bot using ammobox for extremly long period of time (when bot with benelli m3 or remington or colt anaconda or m11 ran completely of out ammo he ignored the fact that these weapons are getting ammo from the ammobox in something like a virtual magazine, in case of regular ammobox visit with one of those weapons then things worked fine)
Bot can now fully use the nomenclature skill
UPDATED tc_caen waypoints (fixed blue path in red armory area, blue bots can now correctly jump on top of the crates there and erased 9 solitary waypoints from unreachable map locations, it again must have been consequence of conversion from different version of this map)
FIXED occasional case where bot was able to target and shoot at enemy without actual visibility (this bug was present since ver. 0.92 in code that gave the bot ability to see through fence and like objects)
Bot can now see through all fences in the central alley on obj_armory (previous code had exception to disable the feature on this map, now the exception was replaced with specific code to handle this case)
Bot will now correctly handle multiple grenades (bot was able to use only the first grenade type in any custom class that gave him both concussion as well as frag, now he is able to detect also the other grenade and use it once the first grenade was depleted)
Increased m14 rate of fire (base delay between two shots has been cut in half, if you'd prefer original slower rate of fire feel free to edit the file matching your FA version inside ...\marine_bot\weapons)
Bot with grenade in hands will no longer advance towards his enemy (which often caused that the bot was too close to safely throw the grenade and had to switch back to firearm or knife)
Bot can now use merge clips feature (will now often reload weapon after battle to keep full magazine in weapon and merge those that were partly used)
Bot will now stop guarding some spot when he runs out of ammo for main weapon (he will also ignore any other wait-timed waypoint until he refills ammunition)
Bot will now switch back to normal fire mode after battle if he leaves the battle (enemy died or was lost) with weapon set to fire the attached grenade launcher
Minimal safe distance for sniper rifles has been cut in half which means the bots will use them even to shoot at close enemies instead of switching to backup weapon or knife
Bot will now deploy bipod only if the enemy is far (he used to deploy it in each battle, which in case of close encounter often led to his quick death)
FIXED (hopefully) all weapon based actions that were causing occasional stuck and inability to act
Bot can now use bipod even outside battles while he's waiting at waypoint with wait-time greater than 50 seconds (he may or may not use it, because deploying bipod has been changed to a randomly generated chance for in-battle case as well as out of battle case)
FIXED resetting navigation (i.e. the bot forgets current waypoint & path and looks for a new one) while moving down the hill or stairs (basically whenever the pitch angle was too steep and bot switched to slow walking then if the waypoint was quite far away, he wasn't able to reach it in less than 4 seconds, which is hardcoded delay for the bot to reach his next waypoint)
FIXED bot returning to already visited waypoint and starting the action there again (e.g. prone waypoint with small range and wait time - bot did wait there, then he crawled back to it and almost always repeated the waiting, which means he waited twice as long as what he should have done according to waypoints)
Bot will now try to sidestep to be able to go prone if someone else is blocking the original spot (e.g. prone waypoint with small range where other bot or player is already waiting so 2nd bot usually just stood still on top of the 1st bot, but now the 2nd bot will strafe to left or right and go prone beside the 1st bot)
FIXED bot with sniper rifle wasn't able to fire his weapon at the shoot waypoint and was stuck there (the code allowing bot stop using weapon scope after battle was also breaking his try to zoom in and fire the weapon when being at the shoot waypoint)
FIXED targetting the aim waypoints when the bot is at shoot or claymore mine (bot often wasn't able to correctly face the direction of the aim waypoint, sometimes the targetting was completely skipped there which caused bugs like claymore mine placed to a wrong direction)
UPDATED sd_durandal waypoints (erased one 2 waypoints long path inside red team spawn area that was basically just a path with the same waypoint added twice to it, erased solitary waypoint on the right route from blue spawn to bridge area, there was a 'sniper' waypoint exactly on 'prone' waypoint, together they blended into yellow colored 'shoot' waypoint, this must have been pretty old bug, because the system doesn't allow such placement anymore for quite a long time, the path leading through long hallway and doors to the red side of bridge area is now 'red team only' path, because those doors there won't open to blue players, finally all 'door' waypoints have been moved closer to the doors so the bots won't wait there that long)
UPDATED client command 'pathwpt insert' has now option to easily insert new waypoint to the beginning of existing path using appropriate keyword as its 3rd argument (eg. 'pathwpt insert 123 55 start' to insert waypoint no. 123 to the beginning of path no. 55)
UPDATED client command 'pathwpt insert' has now option to insert new waypoint to the end of existing path using appropriate keyword as its 3rd argument, this unifies the options for insertion, waypointer can now insert new waypoint into an existing path by using just one command, where its 3rd & 4th argument will specify the exact place of the new waypoint in the path ('pathwpt insert 123 50 start' will place the new waypoint to the beginning of this path, 'pathwpt insert 123 50 end' will place the waypoint to the end of this path and finally the original option 'pathwpt insert 123 50 200 220' will place the waypoint into the path between its two waypoints 200 & 220 ... these two waypoints must be direct neighbours on this path of course)
UPDATED client command 'pathwpt checkinvalid' now checks for 'aim' and 'cross' waypoints being part of path as well as having the same waypoint added twice or more times in the same path, either of these cases is considered as invalid path and will be fixed by removing such waypoint from the path, then will be used the original function of this command, the check for path lenght so any path with length = 1 will be deleted
UPDATED client command 'wpt repair masterrepair' has the same sequence of checks and fixes as the 'pathwpt checkinvalid', it's the last step of the fixes that this command calls in order to finalize all the automated fixes so that you had nearly flawless waypoints (if you don't know the purpose of 'repair' command please check the list of valid commands in waypointing guide or read one of previous changelogs where was this command announced and described)
ADDED client command 'pathwpt split <path> <wpt>' (it will allow you to easily divide a path on two parts - two seperated paths, this is useful when you have a long path and you forgot about any side route, now you can easily split the long path where those routes cross one other and you can create standard cross waypoint there)
CHANGED bot decision making at cross waypoint to allow you greater control (the chance to follow priority based decision is now based on highest priority used there, if you used waypoint with priority = 1 there then there's 85% chance the bot will act based on priority, but if you used waypoint with priority = 3 as the highest priority waypoint at this cross waypoint then the chance the bot will act based on priority drops to just 65% and the rest 35% is unpredictable action - either 2nd highest priority is used or it's completely random pick, previous code had the chance always at 85% for priority based action no matter what was the highest priority used around that cross waypoint)
UPDATED sd_oberland waypoints (fixed missing goback tag on 4 waypoints)
UPDATED tc_golan waypoints (fixed cross waypoint setup in front of the radio house, there was one waypoint disconnected that caused incorrect path end for one-way path leaving that house)
UPDATED tc_thebes waypoints (extended 4 paths, 2 in each team spawn zone, to correctly end at appropriate cross waypoint, also changed them to one-way paths because they all start on upper terrace and end on ground level)
FIXED pathwpt autoadd feature bug that was preventing you to add waypoint into path under certain conditions (basically if you created 3 waypoints long path, deleted it and tried to recreate it then the 2nd waypoint was never added, there was primitive 2 waypoints history for 'pathwpt autoadd' feature that was meant to prevent unwanted addition of the same waypoint to the path twice, now there's a new system to check for that, it's placed right inside the path creation routines so it works always even if you're creating paths manually)
FIXED bug in starting autowaypointing after waypoint deletion (if you deleted the last added waypoint you weren't able to properly start the autowaypointing feature in vicinity of the deleted waypoint, because the last waypoint position wasn't correctly freed, manual waypoint addition doesn't use position history so it wasn't affected by this bug)
UPDATED client command 'wpt repair pathmerge' (it used to check for/repair only typical 'invalid merge of paths' so it tested only path end, but now it will check and repair even if there are two paths that share the same starting waypoint and aren't connected to cross waypoint of course)
UPDATED client command 'pathwpt checkproblems' match the changes in 'wpt repair pathmerge' command (honestly it's the same routine, but it runs in a checking mode only, it's done for those who prefer manual checking before automatic fixing)
UPDATED client command 'wpt repair' has a new option 'crosswpt' (it checks the surrounding of 'cross' waypoint for free path ends, that means path start or end that isn't connected to any 'cross' waypoint, but is close enough to be connected to this 'cross' waypoint, if such thing is found then the range on this 'cross' waypoint is increased to connect it, so the path doesn't start or end in a void anymore, but is correctly connected to the whole network, this fix is meant to be used prior 'pathend' fix)
FIXED client command 'wpt repair sniperspot <index>' returning error if used on single waypoint through index argument (it was getting the value from wrong argument)
UPDATED autowaypointing feature (it's quite a big upgrade, now it creates paths together with the waypoints, it can change waypoint type to the 'ammobox' one if you are near the ammobox entity, it'll stop if you add 'cross' waypoint, it can use many self-fixing routines in order to help you build waypoints as bug free as possible)
FIXED 'wpt autosave' feature stopping currently created path (in order to properly save waypoints the system must finish all paths, that means it has to stop even the path that's currently in creation, usually you don't save waypoints at the moment when you are creating a path, however the 'autosave' feature saves waypoints every 90 seconds so it often hits the moment when you are working with them, now this feature checks for such activity and postpone the save for later moment)
UPDATED claymore evasion (fixed jumping over the mine and added ability to go prone and crawl through it if the movement speed is too low to jump)
FIXED inability to sprint downhill (for Firearms mod the bot was sprinting, the fatigue system worked correctly, but the method that the bot is using to send his movement speed to the game engine was sending incorrect speed value, it was sending slow speed due to high pitch angle, now there's an exception ignoring pitch angle when sprinting is active)
FIXED detection of waypoint range (this means the bot should not dance around waypoints with small range)
FIXED resetting navigation if he got stuck for a while when he was heading towards next waypoint
ADDED option to combine waypoint time and priority to achieve exact wait time (the time you set on waypoint is always modified by the behaviour the bot generates after joining the game, bots that take a role of attacker always reduce the wait time by 35% while bots defenders increase it by 35%, this feature can be disabled now if you set priority to 1 on the waypoint, it's useful especially for specific cases where the bot must wait exact period of time to activate something e.g. the explosives on obj_bocage, basically a goal waypoint, therefore it follows the same logic as priority = 1 on claymore waypoint which is also meant for a goal usage e.g. trucks on sdtc_balcome)
UPDATED obj_bocage waypoints (added priority 1 for blue team to all 5 waypoints where you need to wait to activate the explosives)
UPDATED ps_coldwar waypoints (fixed one blue path on the red side of the movable bridge, there was the same waypoint being added twice to this path)
UPDATED psobj_thanatos waypoints (just erased couple waypoints and paths that were inside unreachable places, basically the leftover from the conversion from obj_thanatos waypoints, because both maps have small changes in architecture)
UPDATED tc_battlefield_r2 waypoints (erased one 2 waypoints long path in red team spawn, it was again a path built of the same waypoint added twice to it and erased 3 solitary waypoints near red team spawn)
UPDATED tc_rubble waypoints (erased two 2 waypoints long paths that were again paths built from the same waypoint added twice to them, it's obvious that Drek really liked doing that :), also reworked the maze in front of the tc house, now there's just one big junction there, replaced 3 other cross waypoints with longer paths that followed previous logic and fixed problem with unwanted 'aim' waypoint sharing in a few places, except for one waypoint at the entrance to tc house where it isn't possible, there would be a loss of original layout)
FIXED bot trying to place claymore mine while being in crouch stance (the bot got a message and reset his action later on, but he was vulnerable to attacks for a while, human player doesn't try that either, therefore there's an exception for this case now together with a proper message for you if you encounter such situation while debugging your waypoints)
UPDATED ps_crash waypoints (fixed one cross waypoint layout inside church, it used to cause the loop problem)
FIXED bot reading the FA text messages (when someone else gives you a medical treatment the message that gets sent has additional string variable, message system decoding function got corrupted by this event so bot after the 1st healing wasn't able to read following messages correctly, which was causing subsequent bugs in bot behaviour)
UPDATED MB console command help (added missing commands, rephrased some explanations, moved commands to correct groups)
ADDED 'console_commands.html' file that replaces 'hlds_cmds.txt' and 'listenserver_cmds.txt' (both files were outdated and several commands were missing)
FIXED fixed client command 'wpt detect' causing game crash with a 'overload on netchan->message' error (if there was too many entities around then the way how this command reported them overloaded the netchan, now it lists them one by one so there should be no overloading)